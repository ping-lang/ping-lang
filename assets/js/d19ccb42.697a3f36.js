(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{66:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return r})),o.d(t,"metadata",(function(){return a})),o.d(t,"toc",(function(){return s})),o.d(t,"default",(function(){return d}));var n=o(3),c=o(7),p=(o(0),o(75)),r={id:"types",title:"types"},a={unversionedId:"types",id:"types",isDocsHomePage:!1,title:"types",description:"Type syntax",source:"@site/docs/types.mdx",slug:"/types",permalink:"/docs/types",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/types.mdx",version:"current",sidebar:"someSidebar",previous:{title:"loop",permalink:"/docs/loop"},next:{title:"macro",permalink:"/docs/macro"}},s=[],i={toc:s};function d(e){var t=e.components,o=Object(c.a)(e,["components"]);return Object(p.b)("wrapper",Object(n.a)({},i,o,{components:t,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"type-syntax"},"Type syntax"),Object(p.b)("pre",null,Object(p.b)("code",{parentName:"pre"},"type name = {\n\n}\n")),Object(p.b)("h1",{id:"declare-a-module"},"Declare a module"),Object(p.b)("blockquote",null,Object(p.b)("p",{parentName:"blockquote"},"type module = {}")),Object(p.b)("h1",{id:"create-a-type"},"Create a type"),Object(p.b)("blockquote",null,Object(p.b)("p",{parentName:"blockquote"},"type hello = {}")))}d.isMDXComponent=!0}}]);